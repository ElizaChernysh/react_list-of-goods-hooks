{"version":3,"sources":["components/GoodList/GoodList.tsx","App.tsx","index.tsx"],"names":["GoodList","goodItems","useState","goods","setGoods","maxLength","setMaxLength","preparedGoods","filter","good","length","className","type","onClick","reverse","sort","firstGood","secondGood","localeCompare","name","id","value","onChange","event","target","map","item","indexOf","goodsFromServer","App","isGoodsVisible","setIsGoodsVisible","ReactDOM","render","document","getElementById"],"mappings":"8PAOaA,EAA4B,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC1C,EAA0BC,mBAAS,YAAID,IAAvC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAkCF,mBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KA+BMC,EAAgBJ,EAAMK,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUL,KAE1D,OACE,sBAAKM,UAAU,WAAf,UACE,wBACEA,UAAU,mBACVC,KAAK,SACLC,QApCe,WACnBT,EAAS,YAAID,GAAOW,YAgClB,qBAOA,wBACEH,UAAU,mBACVC,KAAK,SACLC,QAvCqB,WACzBT,EAAS,YAAID,GAAOY,MAAK,SACvBC,EACAC,GAFuB,OAGpBD,EAAUE,cAAcD,QAgC3B,iCAOA,wBACEN,UAAU,mBACVC,KAAK,SACLC,QAvCe,WACnBT,EAAS,YAAID,GAAOY,MAAK,SACvBC,EACAC,GAFuB,OAGpBD,EAAUN,OAASO,EAAWP,YAgCjC,4BAOA,wBACEC,UAAU,mBACVC,KAAK,SACLC,QAvCa,WACjBT,EAAS,YAAIH,IACbK,EAAa,IAkCX,mBAOA,uBAAOK,UAAU,kBAAjB,SACE,wBACEA,UAAU,yBACVQ,KAAK,SACLC,GAAG,SACHC,MAAOhB,EACPiB,SAAU,SAACC,GAAD,OA5CGF,EA4CoBE,EAAMC,OAAOH,WAzCpDf,GAFwBe,GADN,IAACA,GAuCf,SAOGlB,EAAMsB,KAAI,SAAAC,GAAI,OACb,wBAEEL,MAAK,UAAKlB,EAAMwB,QAAQD,GAAQ,GAChCf,UAAU,mBAHZ,SAKGR,EAAMwB,QAAQD,GAAQ,GAJlBA,UASb,6BACGnB,EAAckB,KAAI,SAACC,GAAD,OACjB,oBACEf,UAAU,uBADZ,SAIGe,GAFIA,YC3FXE,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA6BaC,EA1BO,WACpB,MAA4C3B,oBAAS,GAArD,mBAAO4B,EAAP,KAAuBC,EAAvB,KAMA,OACE,sBAAKpB,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,mBACA,wBACEC,KAAK,SACLC,QATkB,WACtBkB,GAAmBD,IASfnB,UAAU,oBAHZ,SAKGmB,EAAiB,aAAe,UAEnC,qBAAKnB,UAAU,eAAf,SACGmB,GACC,cAAC,EAAD,CAAU7B,UAAW2B,UCjC/BI,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fd167c28.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './GoodList.scss';\n\ntype Goods = {\n  goodItems: string[]\n};\n\nexport const GoodList: React.FC<Goods> = ({ goodItems }) => {\n  const [goods, setGoods] = useState([...goodItems]);\n  const [maxLength, setMaxLength] = useState(1);\n\n  const reverseGoods = () => {\n    setGoods([...goods].reverse());\n  };\n\n  const sortAlphaBetically = () => {\n    setGoods([...goods].sort((\n      firstGood,\n      secondGood,\n    ) => firstGood.localeCompare(secondGood)));\n  };\n\n  const sortByLength = () => {\n    setGoods([...goods].sort((\n      firstGood,\n      secondGood,\n    ) => firstGood.length - secondGood.length));\n  };\n\n  const resetGoods = () => {\n    setGoods([...goodItems]);\n    setMaxLength(1);\n  };\n\n  const selectGoods = (value: string) => {\n    const length: number = +value;\n\n    setMaxLength(length);\n  };\n\n  const preparedGoods = goods.filter(good => good.length >= maxLength);\n\n  return (\n    <div className=\"GoodList\">\n      <button\n        className=\"GoodList__button\"\n        type=\"button\"\n        onClick={reverseGoods}\n      >\n        Reverse\n      </button>\n      <button\n        className=\"GoodList__button\"\n        type=\"button\"\n        onClick={sortAlphaBetically}\n      >\n        Sort alphabetically\n      </button>\n      <button\n        className=\"GoodList__button\"\n        type=\"button\"\n        onClick={sortByLength}\n      >\n        Sort by length\n      </button>\n      <button\n        className=\"GoodList__button\"\n        type=\"button\"\n        onClick={resetGoods}\n      >\n        Reset\n      </button>\n      <label className=\"GoodList__goods\">\n        <select\n          className=\"GoodList__goods-select\"\n          name=\"select\"\n          id=\"select\"\n          value={maxLength}\n          onChange={(event) => selectGoods(event.target.value)}\n        >\n          {goods.map(item => (\n            <option\n              key={item}\n              value={`${goods.indexOf(item) + 1}`}\n              className=\"GoodList__option\"\n            >\n              {goods.indexOf(item) + 1}\n            </option>\n          ))}\n        </select>\n      </label>\n      <ul>\n        {preparedGoods.map((item) => (\n          <li\n            className=\"GoodList__goods-list\"\n            key={item}\n          >\n            {item}\n          </li\n          >\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodList } from './components/GoodList/GoodList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isGoodsVisible, setIsGoodsVisible] = useState(false);\n\n  const goodsVisibility = () => {\n    setIsGoodsVisible(!isGoodsVisible);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">Goods</h1>\n      <button\n        type=\"button\"\n        onClick={goodsVisibility}\n        className=\"App__start-button\"\n      >\n        {isGoodsVisible ? 'Hide goods' : 'Start'}\n      </button>\n      <div className=\"App__wrapper\">\n        {isGoodsVisible && (\n          <GoodList goodItems={goodsFromServer} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}