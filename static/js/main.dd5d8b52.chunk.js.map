{"version":3,"sources":["components/GoodList/GoodList.tsx","App.tsx","index.tsx"],"names":["GoodList","goodItems","useState","goods","setGoods","maxLength","setMaxLength","preparedGoods","filter","good","length","className","type","onClick","reverse","sort","firstGood","secondGood","localeCompare","name","id","value","onChange","event","target","map","item","indexOf","goodsFromServer","App","isGoodsVisible","setIsGoodsVisible","ReactDOM","render","document","getElementById"],"mappings":"iOAMaA,EAA4B,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC1C,EAA0BC,mBAAS,YAAID,IAAvC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAkCF,mBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KA+BMC,EAAgBJ,EAAMK,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUL,KAE1D,OACE,sBAAKM,UAAU,WAAf,UACE,wBACEC,KAAK,SACLC,QAnCe,WACnBT,EAAS,YAAID,EAAMW,aAgCjB,qBAMA,wBACEF,KAAK,SACLC,QArCqB,WACzBT,EAAS,YAAID,EAAMY,MAAK,SACtBC,EACAC,GAFsB,OAGnBD,EAAUE,cAAcD,SA+B3B,iCAMA,wBACEL,KAAK,SACLC,QApCe,WACnBT,EAAS,YAAID,EAAMY,MAAK,SACtBC,EACAC,GAFsB,OAGnBD,EAAUN,OAASO,EAAWP,aA8BjC,4BAMA,wBACEE,KAAK,SACLC,QAnCa,WACjBT,EAAS,YAAIH,IACbK,EAAa,IA+BX,mBAMA,wBACEa,KAAK,SACLC,GAAG,SACHC,MAAOhB,EACPiB,SAAU,SAACC,GAAD,OAtCKF,EAsCkBE,EAAMC,OAAOH,WAnClDf,GAFwBe,GADN,IAACA,GAkCjB,SAMGlB,EAAMsB,KAAI,SAAAC,GAAI,OACb,wBAAQL,MAAK,UAAKlB,EAAMwB,QAAQD,GAAQ,GAAxC,SACGvB,EAAMwB,QAAQD,GAAQ,SAI7B,6BACGnB,EAAckB,KAAI,SAACC,GAAD,OACjB,6BAAgBA,GAAPA,YC7EbE,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAuBaC,EApBO,WACpB,MAA4C3B,oBAAS,GAArD,mBAAO4B,EAAP,KAAuBC,EAAvB,KAMA,OACE,sBAAKpB,UAAU,MAAf,UACE,uCACA,wBAAQC,KAAK,SAASC,QAPF,WACtBkB,GAAmBD,IAMjB,SACGA,EAAiB,aAAe,UAElCA,GACC,cAAC,EAAD,CAAU7B,UAAW2B,QC5B7BI,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dd5d8b52.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\ntype Goods = {\n  goodItems: string[]\n};\n\nexport const GoodList: React.FC<Goods> = ({ goodItems }) => {\n  const [goods, setGoods] = useState([...goodItems]);\n  const [maxLength, setMaxLength] = useState(1);\n\n  const reverseGoods = () => {\n    setGoods([...goods.reverse()]);\n  };\n\n  const sortAlphaBetically = () => {\n    setGoods([...goods.sort((\n      firstGood,\n      secondGood,\n    ) => firstGood.localeCompare(secondGood))]);\n  };\n\n  const sortByLength = () => {\n    setGoods([...goods.sort((\n      firstGood,\n      secondGood,\n    ) => firstGood.length - secondGood.length)]);\n  };\n\n  const resetGoods = () => {\n    setGoods([...goodItems]);\n    setMaxLength(1);\n  };\n\n  const selectGoods = (value: string) => {\n    const length: number = +value;\n\n    setMaxLength(length);\n  };\n\n  const preparedGoods = goods.filter(good => good.length >= maxLength);\n\n  return (\n    <div className=\"GoodList\">\n      <button\n        type=\"button\"\n        onClick={reverseGoods}\n      >\n        Reverse\n      </button>\n      <button\n        type=\"button\"\n        onClick={sortAlphaBetically}\n      >\n        Sort alphabetically\n      </button>\n      <button\n        type=\"button\"\n        onClick={sortByLength}\n      >\n        Sort by length\n      </button>\n      <button\n        type=\"button\"\n        onClick={resetGoods}\n      >\n        Reset\n      </button>\n      <select\n        name=\"select\"\n        id=\"select\"\n        value={maxLength}\n        onChange={(event) => selectGoods(event.target.value)}\n      >\n        {goods.map(item => (\n          <option value={`${goods.indexOf(item) + 1}`}>\n            {goods.indexOf(item) + 1}\n          </option>\n        ))}\n      </select>\n      <ul>\n        {preparedGoods.map((item) => (\n          <li key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { GoodList } from './components/GoodList/GoodList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isGoodsVisible, setIsGoodsVisible] = useState(false);\n\n  const goodsVisibility = () => {\n    setIsGoodsVisible(!isGoodsVisible);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n      <button type=\"button\" onClick={goodsVisibility}>\n        {isGoodsVisible ? 'Hide goods' : 'Start'}\n      </button>\n      {isGoodsVisible && (\n        <GoodList goodItems={goodsFromServer} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}